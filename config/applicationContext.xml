<?xml version="1.0" encoding="UTF-8"?>
<beans
 xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:aop="http://www.springframework.org/schema/aop"  
 xmlns:p="http://www.springframework.org/schema/p"
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="soldierBean" class="org.chy.soldier.Soldier">
		<property name="name" value="Chang Huiyong"/>
		<property name="handWeapon">
			<ref bean="handGunBean" />
		</property>
		<property name="scatterWeapon">
			<ref bean="scatterGunBean" />
		</property>
	</bean>
	
	<bean id="handGunBean" class="org.chy.soldier.HandGun" />
	
	<bean id="scatterGunBean" class="org.chy.soldier.ScatterGun" />
	
	
	<!-- <bean id="testAfterReturnAdviceBean" class="org.chy.soldier.TestAfterReturnAdvice" />
	
	<bean id="testBeforeAdviceBean" class="org.chy.soldier.TestBeforeAdvice" />
	
	
	<bean id="pointCutBean" class="org.chy.soldier.PointCut" />
	
    <bean id="matchBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut">
            <ref bean="pointCutBean" />
        </property>
        <property name="advice">
            <ref bean="testBeforeAdviceBean" />
        </property>
    </bean>
   
    
    使用ProxyFactoryBean 产生代理对象
    <bean id="soldierProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        代理对象所实现的接口 ，如果有接口可以这样设置
        <property name="proxyInterfaces">
            <value>org.chy.soldier.SoldierInterface</value>
        </property>

        设置目标对象
        <property name="target">
            <ref local="soldierBean" />
        </property>
        代理对象所使用的拦截器
        <property name="interceptorNames">
            <list>
               	<value>testAfterReturnAdviceBean</value>
                <value>testBeforeAdviceBean</value>
            </list>
        </property>
    </bean> -->
</beans>